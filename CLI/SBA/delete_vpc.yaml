---

- name: delete a vpc
  hosts: all
  become: yes
  gather_facts: true
  vars:
    # tenant_id: 1
    # vpc_id: 1
    # num_bridges: 2
    # last_vpc: true
    zone: "{{ zone }}"
  
  tasks:
  - name: Delete the tenant VPC
    command: ip netns del t"{{ tenant_id }}"-ns"{{ vpc_id }}"
    become: yes

  # No need for this. Causes issues. Automatically gets deleted.
  - name: delete interface from transit gateway
    command: ip netns exec transit-"{{ tenant_id }}" ip link del dev t"{{ tenant_id }}"-ns"{{ vpc_id }}"-veth3
    ignore_errors: yes

  - name: delete interface from provider namespace
    command: ip netns exec PNS ip link del dev t"{{ tenant_id }}"-ns"{{ vpc_id }}"-veth1
    ignore_errors: yes

  # - name: delete transit namespace if last_vpc is true
  #   command: ip netns del transit-"{{ tenant_id }}"
  #   become: yes
  #   when: "{{ last_vpc == 'true' }}"

  - name: Delete all bridges connected to the VPC namespace in zone 1
    shell: ovs-vsctl del-br t"{{ tenant_id }}"-ns"{{ vpc_id }}"-br"{{ item }}"
    loop: "{{ query('sequence', 'start=1 end='+(z1_num_bridges)|string) }}"
    when : zone == "zone1"
  
  - name: Delete all bridges connected to the VPC namespace in zone 2
    shell: ovs-vsctl del-br t"{{ tenant_id }}"-ns"{{ vpc_id }}"-br"{{ item }}"
    loop: "{{ query('sequence', 'start='+ (z2_start)|string + ' end='+(z2_num_bridges)|string) }}"
    when : zone == "zone2"

  - name: Delete interface in VPC namespace that connected to the bridge in z1
    shell: ip link del dev vrbr"{{ item }}"-t"{{ tenant_id }}"-ns"{{ vpc_id }}"
    loop: "{{ query('sequence', 'start=1 end='+(z1_num_bridges)|string) }}"
    when : zone == "zone1"
  
  - name: Delete interface in VPC namespace that connected to the bridge in z2
    shell: ip link del dev vrbr"{{ item }}"-t"{{ tenant_id }}"-ns"{{ vpc_id }}"
    loop: "{{ query('sequence', 'start='+ (z2_start)|string + ' end='+(z2_num_bridges)|string) }}"
    when : zone == "zone2"